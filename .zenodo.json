{
    "upload_type": "software",
    "language": "eng", 
    "title": "JuDFTteam/aiida-fleur: AiiDA-FLEUR", 
    "license": {
      "id": "MIT"
    }, 
    "access_right": "open",
    "grants": [
      {
        "id": "824143" 
      }, 
      {
        "id": "676598" 
      }
    ], 
    "keywords": [
      "physics", 
      "materials-science", 
      "electronic-structure", 
      "python", 
      "scientific-computing",
      "workflow",
      "DFT",
      "aiida-framework",
      "aiida-plugin",
      "max-repo",
      "FLEUR",
      "FLAPW",
      "JLVMD",
      "JuDFT"
    ], 
    "creators": [
      {
        "orcid": "0000-0001-7939-226X", 
        "affiliation": "Forschungszentrum J\u00fclich GmbH", 
        "name": "Jens Br\u00f6der"
      },
      {
        "orcid": "0000-0001-9130-0049", 
        "affiliation": "Forschungszentrum J\u00fclich GmbH", 
        "name": "Vasily Tseplyaev"
      }, 
      {
        "orcid": "0000-0003-3558-9487", 
        "affiliation": "Forschungszentrum J\u00fclich GmbH", 
        "name": "Henning Janssen"
      }, 
      {
        "orcid": "0000-0001-9078-0132", 
        "affiliation": "Forschungszentrum J\u00fclich GmbH", 
        "name": "Anoop Chandran"
      }, 

      {
        "orcid": "0000-0002-2248-1904", 
        "affiliation": "Forschungszentrum J\u00fclich GmbH", 
        "name": "Daniel Wortmann"
      }, 
      {
        "orcid": "0000-0001-9987-4733", 
        "affiliation": "Forschungszentrum J\u00fclich GmbH", 
        "name": "Stefan Bl\u00fcgel"
      }
    ], 
    "subjects": [
      {
        "term": "electronic structure", 
        "scheme": "url", 
        "identifier": "https://www.wikidata.org/wiki/Q5358432"
      }, 
      {
        "term": "materials informatics", 
        "scheme": "url", 
        "identifier": "https://www.wikidata.org/wiki/Q6786605"
      }
    ], 
    "description": "<p><strong> This software contains a plugin that enables the usage of the all-electron DFT FLEUR program with the AiiDA framework.</strong></p>\n\n<p>Feel free to contribute.</p>\n\nThe code is hosted on GitHub at: https://github.com/JuDFTteam/aiida-fleur</p>\n\n<p>The documentation is hosted on https://aiida-fleur.readthedocs.io.</p>\n\n<p>Most functionality and workflows was developed for the use with the DFT program FLEUR developed at the Forschungszentrum J&uuml;lich (see http://judft.de, https://flapw.de for further information on the codes) and in the context of the AiiDA framework (https://aiida.net).</p>\n\n<p><strong>Installation</strong></p>\n\n<blockquote>\n<p><br>\npip install aiida-fleur<br>\n&nbsp;</p>\n</blockquote>\n\n<p><strong>Dependencies</strong></p>\n\n<p>These python packages are needed:</p>\n\n<ul>\n\t<li>`aiida-core[atomic_tools]`</li>\n\t<li>`masci-tools`</li>\n\t<li>`lxml`</li>\n\t<li>`pyhull` &nbsp;</li>\n\t<li>`sympy`</li>\n\t<li>`numpy`</li>\n\t<li>`future`</li>\n\t<li>`pyhull`</li>\n\t<li>`sqlalchemy<1.4`</li>\n</ul>\n\n<p><strong>Layout of aiida-fleur</strong></p>\n\n<ul>\n\t<li>&nbsp;`calculation`: Contains AiiDA job calculation plugins for the inpgen code and the FLEUR code.\n\t<ul>\n\t<li>`cmdline`: Contains files for the commandline interface.</li>\n\t</ul>\n\t</li>\n\t<li>`tests`: auto tests of `aiida-fleur` functions</li>\n\t<li>`common`: Contains base classes and constants which are used throughout the package.</li>\n\t<li>`data`: Contains AiiDA data plugins specific to FLEUR.</li>\n\t<li>`parsers`: Contains parser AiiDA plugins for the job calculation plugins.</li>\n\t<li>`tools`: Contains basic utility and high level utility which is rather complete</li>\n\t<li>`workflows`: Contains a collection of AiiDA workchains (workflows) specific to FLEUR which have HPC and HTC capabilties with full provenance tracking. </li>\n</ul>\n\n<p><strong>License</strong>:<br>\naiida-fleur is distributed under the terms and conditions of the MIT license which is specified in the `LICENSE` file.</p>"
}
